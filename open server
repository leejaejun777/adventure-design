#include "WiFiEsp.h"

// Emulate Serial1 on pins 6/7 if not present
#ifndef HAVE_HWSERIAL1
#include "SoftwareSerial.h"
SoftwareSerial Serial1(2, 3); // RX, TX
#endif

char ssid[] = "ok";            // your network SSID (name)
char pass[] = "12345678";      // your network password
int status = WL_IDLE_STATUS;   // the Wifi radio's status

const int trigPin = 9;
const int echoPin = 8;

bool rotated[2] = {false, false};

WiFiEspServer server(80);

void setup() {
  Serial.begin(9600);    // initialize serial for debugging
  Serial1.begin(9600);   // initialize serial for ESP module
  WiFi.init(&Serial1);   // initialize ESP module

  if (WiFi.status() == WL_NO_SHIELD) {
    Serial.println("WiFi shield not present");
    while (true);
  }

  while (status != WL_CONNECTED) {
    Serial.print("Attempting to connect to WPA SSID: ");
    Serial.println(ssid);
    status = WiFi.begin(ssid, pass);
  }

  Serial.println("You're connected to the network");
  printWifiStatus();

  server.begin();

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
}

void loop() {
  WiFiEspClient client = server.available();
  if (client) {
    Serial.println("New client");
    client.setTimeout(5000);  // Set client timeout to 5 seconds

    while (client.connected()) {
      if (client.available()) {
        String income_AP = client.readStringUntil('\n');
        Serial.println(income_AP);

        if (income_AP.indexOf(F("GET /1")) != -1) {
          Serial.println(F("rotated = 1"));
          rotated[1] = true;
        } else if (income_AP.indexOf(F("GET /0")) != -1) {
          Serial.println(F("rotated = 0"));
          rotated[1] = false;
        }
        client.flush();

        // 초음파 센서를 통해 거리 측정
        long duration, distance;
        digitalWrite(trigPin, LOW);
        delayMicroseconds(2);
        digitalWrite(trigPin, HIGH);
        delayMicroseconds(10);
        digitalWrite(trigPin, LOW);
        duration = pulseIn(echoPin, HIGH);
        distance = (duration / 2) / 29.1; // 거리 계산 (단위: cm)
        Serial.println(String("distance : ")+ distance);

        if (distance < 10) {
          rotated[0] = true;
        } else {
          rotated[0] = false;
        }

        // 클라이언트 IP 확인
        IPAddress clientIP = client.remoteIP();
        String clientIPStr = String(clientIP[0]) + "." + String(clientIP[1]) + "." + String(clientIP[2]) + "." + String(clientIP[3]);
        Serial.println(clientIPStr);

        // 특정 IP가 아닐 경우 웹 페이지 응답 생성
        if (clientIPStr != "192.168.156.231") {
          Serial.println("Sending response");
          client.print(
            "HTTP/1.1 200 OK\r\n"
            "Content-Type: text/html\r\n"
            "Connection: close\r\n"
            "Refresh: 20\r\n"
            "\r\n");
          client.println("<head>");
          client.println("<style>");
          client.println("body { font-family: Arial, sans-serif; background-color: #73EEB2; }");
          client.println(".container { text-align: center; margin-top: 50px; }");
          client.println(".image-container { position: relative; display: inline-block; }");
          client.println(".image-text { position: absolute; font-size: 30px; }");
          client.println(".rotated { color: red; }");
          client.println(".not-rotated { color: blue; }");
          client.println(".position1 { top: 30%; left: 70%; }");
          client.println(".position2 { top: 80%; left: 40%; }");
          client.println("</style>");
          client.println("</head>");
          client.println("<body>");
          client.println("<div class='container'>");
          client.println("<div class='image-container'>");
          client.println("<img src='https://www.khu.ac.kr/upload/cross/images/000003/imgSub050102.jpg' alt='External Image'>");
          if (rotated[0]) {
            client.print("<div class='image-text rotated position1'>X</div>");
          } else {
            client.print("<div class='image-text not-rotated position1'>O</div>");
          }
          if (rotated[1]) {
            client.print("<div class='image-text rotated position2'>X</div>");
          } else {
            client.print("<div class='image-text not-rotated position2'>O</div>");
          }
          client.println("</div>");
          client.println("</div>");
          client.println("</body>");
          client.println("</html>");
        }

        client.flush();
        delay(1);
        break;
      }
    }
    delay(10);
    client.stop();
    Serial.println("Client disconnected");
  }
}

void printWifiStatus() {
  Serial.print("SSID: ");
  Serial.println(WiFi.SSID());
  IPAddress ip = WiFi.localIP();
  Serial.print("IP Address: ");
  Serial.println(ip);
  Serial.println();
  Serial.print("To see this page in action, open a browser to http://");
  Serial.println(ip);
  Serial.println();
}
